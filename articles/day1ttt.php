<?php $thisPage="Day 1 of Tic Tac Toe"; ?>
<?php $title="Day 1 of Tic Tac Toe"; ?>
<?php include("../topsubfolder.php"); ?>
	<div class="center">
		<h3>Day 1 of Tic Tac Toe</h3>
	</div>
	<p>This is day one of my Tic Tac Toe project, but there isn’t much to say about it.  I haven’t put a single line of code to file.  At this point, I’m not exactly daunted by the project, but I have no idea how to really make it work.  I’ve had a lot of thoughts about how it might be possible, and I’ll probably describe some of them below.</p> 

	<p>First, so far, my various projects have existed as single page.  The functions have their own files, but my game of rock paper scissors does not utilize a change in screens to, say, show a result.  As I see it, this project will have to occupy more than one page, as is, I can’t see the possibilities in php that will allow me to move from the state of the board when a player makes a choice to the next state without using some sort of page change.  If there is a way to reflect and record changes on the game board while remaining on the same page, I’d definitely prefer that method.  But, as is, I haven’t found the way, yet.  Now, that being said, this is just day one of my TTT game, and really, I’ve spent the majority of my day on other projects.  I still have issues with my website, namely old versions of code that I now know better about or have the skills to update and dry up.  So I’ve been playing a sort of catch up on that.</p>

	<p>As I see TTT, I would think it would be more dynamic and perhaps easier to write a program with two humans players.  The issue with programming a computer is that there is no way to program a human-like player.  I can only imagine two possibilities, a computer that imputs random spots on the board when it is their turn, which is hardly a real opponent.  Playing that game wouldn’t be much of playing TTT as it would be watching the computer make bad choices.  The other option would be to program the exact moves that the computer makes.  That is, if the human player plays their opening move in the center, the computer will always make the same choice in response.  No matter what move the player makes, the computer would just make the same response in every game played.  That’s not very interesting, either.  It would make for an optimal opponent, though (if I program the moves correctly!).  I also see that as being very difficult to calculate.  At the start of the game, there are nine possible opening moves, requiring writing nine reactions.  Then After that, there are seven moves the player can make, requiring six reactions.  From there, it would mean five human possible choices, with four responses, and so on.  It’s not ridiculous, but it’s a lot of code.  Now that I think of it, you have to program a response for each human choice, so though there are four possible spots after the player goes there, it’s five responses that need to be written.</p>

	<p>Programming for the humans might require keeping track of only the nine spots.  That is, after each choice is made, you compare the updated store of positions picked and check it against the eight win conditions.  There are, I think, eight combinations to win, and if you check against those, all you care about is if those are filled, and if they aren’t, well, then you can announce a draw.  At this point, I have no clue as to how this will be programmed.  That’s for Tuesday.</p>
	</div>
	</body>
</html>