<?php $thisPage="href and include"; ?>
<?php $title="href and include()"; ?>
<?php include("../topsubfolder.php"); ?>
	<div class="center">
		<h3>href and include()</h3>
	</div>
	<p>The links defined in href are dependent on the path specified in the href value.  So, for instance, adding a url, complete with the whole web information, will send the link to that specific website, as if the user will be coming from another website.  That is, it will act as a way of coming to the site externally.  In other words, it would restart a session that was started when the user was on the site page. So, even if the user clicks on a link that sends the user to another page on that website, given that it starts as a link, that session will restart.  If the link specified is not a url (with http://, www or something like that, and just contains a name for a directory within that website, it will not restart a session.</p>  

	<p>If the href link is just a name or path for a page internal to the website, the link will send the user to that site specified by the path.  So, for instance, if the user is on the index page of the website, and the href is just something like “goals.php”, it will send the user to the base webpage url plus that path-- something like mikeducey.omahacodeschool.com/goals.php.  If the user is in a subdirectory, things must be slightly more specific or detailed in order for the user to get to the proper path.  If the user is on a site that is located in the articles subdirectory, just clicking on goals.php will send the user to the site plus articles/goals.php, which would then send the user to a nonexisting page (that is, unless the user somehow has a goals page in the articles folder.  If a / is located at the start of the href link, like /goals.php, it will change things.  That command directs the link to start at the index and follow paths from there.  So, a user on a page that is in the rps folder (where the rock paper scissors game is located), and clicks on a link that has /articles/web-as-medium.php, it will not start the user’s path from the rps folder (rps/articles/web-as-medium.php), but will send the user to mikeducey.omahacodeschool.com/articles/web-as-medium.php.  Thus, how that href is written for internal links becomes very specific and important.  This function can also be used to back up from subdirectories.  One can compose the href to go back a folder with ../, so a user in the rps subdirectory could back up to look at a site on the same directory level as the index by clicking on an href link that sends them to ../goals.php.</p>

	<p>The include() function for php is somewhat different.  This function, located within the html in a php tag, will allow the user to include a php page located in the files for that website.  So, an include() function that would include a php with the navigation information would inject the code and information found on that navigation php page in the current page.  This helps DRY up the code, as users can use include() to help include information found on all pages.  This would mean things like the html tag or DOCTYPE! html tags up top could be written on a separate php page and just injected into the page using the include() function, which saves a lot of space, size, and overall order found in a particular site’s html code.</p>

	<p>The include() command is also dependent on which subdirectory you are in.  Just as with the href command, the specific path for the php site to be included with the include() function must be specified.  If the page to be included is not located in the same directory as the one the user is presently in, the include function will not be able to locate that page.  So, the specific path must be specified.  Adding “/” in front of the included page will start the request to locate that file at the index, while “../” will direct that path to start in the directory preceding/up one level from where the user is presently located.</p>

	<p>I’m sure there is a lot more that could be said about include() and href() paths, but for now, I think this should cover the basics for an introduction!</p>
	</div>
	</body>
</html>